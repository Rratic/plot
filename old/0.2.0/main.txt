Rratic@raw> ./rewind.zino
|__  (_)_ __   ___  / _ \/ ___|   | Documentation: https://spec.commonmark.org/
  / /| | '_ \ / _ \| | | \___ \   |
 / /_| | | | | (_) | |_| |___) |  | Version 1.0.0-beta
/____|_|_| |_|\___/ \___/|____/   | Take your chance.

Rratic@raw> ls

Rratic@raw> help
nothing

Rratic@raw> pwd
home/

Rratic@raw> cat ./nothing
There's a silver coin in your mouth.

Rratic@raw> spit

Rratic@raw> spit
nothing

Rratic@raw> help
"help" is not recognized.

Rratic@raw> cat "\"help\" is not recognized."
ZKkrcICJ

Rratic@raw> cd ../

Rratic@raw> ls
<DIR> future/
<DIR> home/
<EXE> julia.zino
<EXE> rewind.zino

Rratic@raw> telnet www.un.org
IPv6 main servers failed to respond (3).
  - Beijing Internet Institute [240c:f:1:22::6]
  - WIDE Project [2001:200:1d9::35]
  - TIISF [2001:4f8:3:1006::1:4]
IPv6 copilot servers failed to respond (22).
  - AS59715 [2a02:cdc5:9715:0:185:5:203:53]
  - Dahu Group [2001:4b98:dc2:45:216]
  - Bond Intemet Systems [2a02:2810:0:405::250]
  - MSK-IX [2001:6d0:6d06::53]
  - CERT Austris [2a01:4f8:161:6106:1::10]
  - ERNET Inda [2001:e301c1e:1::333]
  - dnsworkshop/informnis [2a03:4000:5:2c3::53]
  - Dahu Group (2) [2001:67c:217c:6::2]
  - Aqua Ray SAS [2a02:ec0:200::1]
  - SWITCH [2001:620:0:ff::29]
  - CHILENIC [2001:1398:1:21::8001]
  - Yeti-Shanghai [240e:eb:8001:e01::53]
  - Yeti-Chengdu [2001:da8:268:4200::6]
  - Yeti-Guangzhou [240e:97c:38:201::44]
  - Yeti-ZA [2c0f:f530::6]
  - Yeti-AU [72401:c900:1401:3b:c::6]
  - ERNET iNDIA [2001:e30:187d::333]
  - ERNET iNDIA (2) [2001:e30:1c1e:10::333]
  - dnsworkshop/informnis (2) [2001:19f0:0:1133::53]
  - Monshouwer Internet Diensten [2a02:990:100:b01::53:0]
  - DATEV [2a00:e50:f15c::1000::1:53]
  - JHCLOOS [2001::19f0:5401:1c3::53]

IPv4 main server failed to respond (1).
  - A [198.41.0.4]
IPv4 copilot servers failed to respond (12).
  - B [128.9.0.107]
  - C [192.33.4.12]
  - D [128.8.10.90]
  - E [192.203.130.10]
  - F [192.5.5.241]
  - G [192.112.36.4]
  - H [128.63.2.53]
  - I [192.36.148.17]
  - J [192.58.128.30]
  - K [192.0.14.129]
  - L [198.32.64.12]
  - M [202.12.27.33]

Rratic@raw> cd future
Process denied.

Rratic@raw> ./julia.zino
               _
   _       _ _(_)_     |  Documentation: https://docs.julialang.org
  (_)     | (_) (_)    |
   _ _   _| |_  __ _   |  Type "?" for help, "]?" for Pkg help.
  | | | | | | |/ _` |  |
  | | |_| | | | (_| |  |  Version 0.0.0 (1900-01-01)
 _/ |\__'_|_|_|\__'_|  |  Official https://julialang.org/ release
|__/                   |

julia> typeof(0)
Int170141183460469231731687303715884105728

(@v0.0) pkg> st
      Status `ftp://0.0.0.0:200/.julia/environments/v0.0/Project.toml`
  [deadbeef] ZinoOS v1.0.0-beta

julia> using ZinoOS

julia> ZinoOS.
user

julia> typeof(user)
typeof(user)

julia> fieldnames(typeof(user))
ERROR: ArgumentError: type does not have a definite number of fields
Stacktrace failed.

julia> user.name
"Rratic"

julia> user.uuid
UUID("9d17c602-7472-5fdc-a520-3554ab30ceb7")

julia> m=user.memory
Memory (Untouched)

julia> length(m)
50040161567

julia> sizeof(m)
incredible

julia> m[1]
"x𝗑𝘅𝘹𝙭𝚡ｘ𝐱×х⨯ⅹ"

julia> m[2]
dream (generic function with 1 method)

julia> m[2]()
A dream, at least it says so.
Lily's proposal

julia> m[2].proposal
Dict:
===
[NID]
1
[Object Class]
"Unnecessary"
[Special Containment Procedures]
[.containment]
"nothing"
[.side]
if(
  occur($this),
  list(
    assign(personnel
      union(
        setof(sapient),
        setof(isalive),
        foundation.items,
        setof((i) -> nequal(classify(i,foundation),0))
      );
      field=local
    )
    discharge(
      personnel;
      mood=honorably
    ),
    allow(
      personnel,
      setof(behaviour)
    ),
    release(
      union(
        $foundation.items,
        setof((i) -> equal(classify(i,foundation),0)),
        setof(sapient),
        setof((i) -> not(aggressive(i)))
      )
    ),
    decommission(
      union(
        foundation.items,
        setof((i) -> equal(classify(i,foundation),0)),
        setof((i) -> able(decommission,i))
      )
    ),
    give(
      union(
        setof(foundation.items.sites),
        setof(remaining)
      ),
      foundation.items.AIAD
    ),
    release(
      instancesof(
        foundation.nid["514"]
      );
      to=earth
    )
    ;
    ordered=true
  )
)

[Description]
"""$this refers to an event occurring shortly before the cessation of all life on Earth. Whilst $this has not yet taken place, it was discovered through various pieces of information gathered from extra-universal Foundations and other similar groups (see attached document 001-A for a list of such communications).

It is important to note $this is not the cause of the apocalyptic scenario, merely a pre-occurrence response to it. $this is, according to records, distinctively recognised by certain key features.

During an $this event, flowers are observed to spontaneously appear and bloom over ~90% of the viable land surface of the planet. These flowers are universally referred to as "vibrant", "bright", "beautiful", and/or words to this effect. The weather will clear, globally, with an ambient temperature recognised as comfortable by the majority of the populace. Air pollution will additionally clear.

During an $this event, the global populace will become aware of the fate of the Earth, and of its inevitability. They will also experience heavily decreased levels of violence.

$this will occur exactly 24 hours before the death of all life on the planet."""

julia> m[3]
ticket (one way)

julia> m[3].code
(prey::Entity,target::Entity) -> begin
  insert!(world,Rule(
    :(lim($time,$Inf,distance(prey,target)=0))
  ))
  send(prey,target)
end

julia> m[3].prey
$user

julia> m[4]
Qsdegllv (angel)

julia> typeof(m[4])
Demon

julia> m[4].exports
chat (generic function with 1 method)
kill (generic function with 1 method)

julia> m[4].chat.code
(text::String) -> begin
  require(["AI"],(mod::Module) -> begin
    ans=mod.answer!(memory)
    send(ans,user)
  end)
end

julia> m[4].memory
OrderedList:
1. light (unrecognized)
2. darkness (UTF-8 LF)
3. $user
4. "get-help"
5. "I don't understand that."
...
1173. $kill

julia> m[4].memory[1173]
$user killed Qsdegllv

julia> m[4].memory[1173].items
UnorderedList:
- killer

julia> ki=m[4].memory[1173].items.killer
A tool, to kill preys.

julia> m[5]
pigeon (the one in Lily's proposal)

julia> m[5].code
mutable struct pigeon <: Entity
  pos::Pos
  target::Entity
end
function update(p::pigeon)
  if evil(getmainwill(p.target))
    move!(p.pos,p.target)
  else
    p.target=findfirst(Entity;by=(e) -> distance(e,p))
    if isnothing(p.target)
      rewind!(world)
    end
  end
end
